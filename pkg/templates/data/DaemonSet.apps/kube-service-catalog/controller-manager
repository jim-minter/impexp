apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: controller-manager
  name: controller-manager
  namespace: kube-service-catalog
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: controller-manager
  template:
    metadata:
      labels:
        app: controller-manager
    spec:
      containers:
      - args:
        - controller-manager
        - --secure-port
        - "6443"
        - -v
        - "3"
        - --leader-election-namespace
        - kube-service-catalog
        - --leader-elect-resource-lock
        - configmaps
        - --cluster-id-configmap-namespace=kube-service-catalog
        - --broker-relist-interval
        - 5m
        - --feature-gates
        - OriginatingIdentity=true
        - --feature-gates
        - AsyncBindingOperations=true
        command:
        - /usr/bin/service-catalog
        env:
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: openshift/origin-service-catalog:v3.10.0
        imagePullPolicy: IfNotPresent
        name: controller-manager
        ports:
        - containerPort: 6443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/kubernetes-service-catalog
          name: service-catalog-ssl
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        node-role.kubernetes.io/master: "true"
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: service-catalog-controller
      serviceAccountName: service-catalog-controller
      terminationGracePeriodSeconds: 30
      volumes:
      - name: service-catalog-ssl
        secret:
          defaultMode: 420
          items:
          - key: tls.crt
            path: apiserver.crt
          - key: tls.key
            path: apiserver.key
          secretName: controllermanager-ssl
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
